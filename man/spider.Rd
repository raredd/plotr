% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot2.R
\name{spider}
\alias{spider}
\title{Spider plot}
\usage{
spider(
  x = NULL,
  y,
  group = NULL,
  start = NULL,
  breaks = NULL,
  col = NULL,
  lwd = par("lwd"),
  lty = par("lty"),
  labels = unique(group),
  at.labels = NULL,
  col.labels = col,
  panel.first = NULL,
  panel.last = NULL,
  ...
)
}
\arguments{
\item{x, y}{numeric vectors of data; note that \code{x} is optional and
if undefined, \code{y} values are plotted at \code{seq_along(y)} on the
x-axis (separately for each group)}

\item{group}{a vector defining groups}

\item{start}{an optional vector of length 1 or 2 giving the starting
values for \code{x} and \code{y}, respectively}

\item{breaks}{a vector of cut points for \code{y}; segments that end in
the nth interval of \code{breaks} will be colored with \code{col[n]}}

\item{col, lwd, lty}{if \code{breaks} is \code{NULL}, a vector of colors,
line withds, and line types for each group; otherwise, vectors for each
break}

\item{labels}{optional labels for each group, plotted at the last value
of \code{y} for each group}

\item{at.labels, col.labels}{vectors of x-coordinates and colors for each
group label}

\item{panel.first, panel.last}{expressions to be evaluated before or after
plotting takes place}

\item{...}{additional arguments passed to \code{plot.default} or graphical
parameters further passed to \code{\link{par}}}
}
\description{
Draw a spider plot.
}
\examples{
## basic usage
spider(y = airquality$Temp[airquality$Day == 1])
with(airquality, spider(Day[Month == 5], Temp[Month == 5]))

## with groups
with(airquality, spider(Day, Temp, group = Month))
with(airquality, spider(Day, Temp - mean(Temp), group = Month, start = 0))
with(airquality, {
  spider(Day, Temp - mean(Temp), group = Month, start = 0,
         labels = month.abb[unique(Month)],
         at.labels = par('usr')[2], col.labels = 1)
})

## with breaks
br <- c(0, 70, 80, 90, 100)
cc <- c('black', 'yellow', 'orange', 'red')
spider(
  y = airquality$Temp, breaks = br, col = cc,
  bty = 'l', las = 1L, lwd = 2,
  panel.first = {
    p <- par('usr')
    rect(p[1], br[-length(br)], p[2], br[-1],
         col = adjustcolor(cc, 0.1), border = NA)
  },
  panel.last = points(airquality$Temp, pch = 16L,
                      col = ifelse(airquality$Temp > 90, 2, NA))
)

}
